close all force
tree = "4-11";
trainingDataFile = "trainingData.mat";
trainingResultFile = "trainingResult.mat";
predictedTree = "predict_" + tree + ".mat";
if isfile(trainingDataFile)
    trainingData = load(trainingDataFile).trainingData;
    trainingResult = load(trainingResultFile).trainingResult;
else
    disp("files not found!");
    trainingData = [];
    trainingResult = [];
end
dataFile = "tree(" + tree + ").mat";
imageFile = "tree(" + tree + ").png";
[MM, normalized, ~] = loadAndNormalize(dataFile); 
firstBand = 1;
lastBand = 100;
MM = MM(:, :, firstBand:lastBand);
workingMatrix = MM;
% pca_len = 8;
% pca = hyperpca(normalized,pca_len);
% workingMatrix = pca;

while questdlg("collect more data?") == "Yes"
    [trainingDataTemp, trainingResultTemp] = createTrainingData(imageFile, workingMatrix);
    if questdlg("add the data to the training set?") == "Yes"
        trainingData = cat(1, trainingData, trainingDataTemp);
        trainingResult = cat(1, trainingResult, trainingResultTemp);
    end
end
%uncomment to save training data
save(trainingDataFile, "trainingData")
save(trainingResultFile, "trainingResult")
sizepca = size(workingMatrix);
Mdl = TreeBagger(50, trainingData, trainingResult, Method="classification", OOBPrediction="on", MinLeafSize=3);
% disp(Mdl);
% view(Mdl.Trees{1},Mode="graph")
% plot(oobError(Mdl))
% xlabel("Number of Grown Trees")
% ylabel("Out-of-Bag Classification Error")
p = reshape(workingMatrix, [sizepca(1) * sizepca(2), sizepca(3)]);
y = predict(Mdl, p);
y_square = str2double(reshape(y, sizepca(1), sizepca(2)));
save(predictedTree, "y_square");
I = imread(imageFile);
I = imresize(I, [512 512]);

figure
subplot(1,2,1), image(I),title('RGB image')
colormap("sky")
subplot(1,2,2),imagesc(y_square),title('predicted')
datacursormode on

% figure
% rescalePC = rescale(pca,0,1);
% montage(rescalePC,'BorderSize',[10 10],'Size',[1 sizepca(3)]);


function [trainingData, trainingResult] = createTrainingData(imgFile, pca1)
    I = imread(imgFile);
    I = imresize(I, [512 512]);
     s = size(pca1);
    title("select region and double click inside");
    [~,rect] = imcrop(I);
    if questdlg("flower?") == "Yes"
        val = 1;
    else
        val = 0;
    end
    width = fix(rect(3)) + 1;
    height = fix(rect(4)) + 1;    
    xoffset = fix(rect(1));
    yoffset = fix(rect(2));
    data = zeros(1, width * height, s(3));
    result = zeros(width * height, 1);
    counter = 0;
    for y = yoffset:yoffset + height - 1
        for x = xoffset:xoffset + width - 1
            counter = counter + 1;
            data(1, counter, :) = pca1(y, x, :);
            result(counter) = val;
        end
    end
   
    trainingData = reshape(data, [width * height, s(3)]);
    trainingResult = result;
end
